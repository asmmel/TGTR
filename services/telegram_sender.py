import asyncio
import logging
import os
from typing import Optional, Dict, Any
import aiofiles
from aiogram import Bot
from aiogram.exceptions import TelegramRetryAfter, TelegramNetworkError
from aiogram.types import Message, InputFile

logger = logging.getLogger(__name__)

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π, –µ—Å–ª–∏ –æ–Ω–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ aiogram
class TelegramServerError(Exception):
    """–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è –æ—à–∏–±–æ–∫ —Å–µ—Ä–≤–µ—Ä–∞ Telegram"""
    pass

class TelegramError(Exception):
    """–û–±—â–µ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è –æ—à–∏–±–æ–∫ Telegram"""
    pass

class TelegramSender:
    """–ö–ª–∞—Å—Å –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π"""
    
    def __init__(self, bot):
        self.bot = bot
        self.retry_delays = [1, 2, 5, 10, 30]  # –≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–æ —Ä–∞—Å—Ç—É—â–∏–µ –∑–∞–¥–µ—Ä–∂–∫–∏
        self.pyrogram_app = None  # –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–∑–∂–µ
        
    def set_pyrogram_app(self, app):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç Pyrogram –∫–ª–∏–µ–Ω—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤"""
        self.pyrogram_app = app
        
    async def send_message(self, chat_id, text, **kwargs):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Ñ–ª—É–¥-–∫–æ–Ω—Ç—Ä–æ–ª—è –∏ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫"""
        for attempt, delay in enumerate(self.retry_delays):
            try:
                return await self.bot.send_message(chat_id, text, **kwargs)
            except TelegramRetryAfter as e:
                # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–ª—É–¥-–∫–æ–Ω—Ç—Ä–æ–ª—è
                retry_after = max(e.retry_after, delay)
                logger.warning(f"–§–ª—É–¥-–∫–æ–Ω—Ç—Ä–æ–ª—å: –æ–∂–∏–¥–∞–Ω–∏–µ {retry_after} —Å–µ–∫ (–ø–æ–ø—ã—Ç–∫–∞ {attempt+1}/{len(self.retry_delays)})")
                await asyncio.sleep(retry_after)
            except Exception as e:
                # –î—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ - –ª–æ–≥–∏—Ä—É–µ–º –∏ –ø–æ–≤—Ç–æ—Ä—è–µ–º —á–µ—Ä–µ–∑ –∑–∞–¥–µ—Ä–∂–∫—É
                logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e} - –æ–∂–∏–¥–∞–Ω–∏–µ {delay} —Å–µ–∫ (–ø–æ–ø—ã—Ç–∫–∞ {attempt+1}/{len(self.retry_delays)})")
                await asyncio.sleep(delay)
                
                # –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞, –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
                if attempt == len(self.retry_delays) - 1:
                    raise
        
        # –ï—Å–ª–∏ –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã (–Ω–µ –¥–æ–ª–∂–Ω—ã —Å—é–¥–∞ –ø–æ–ø–∞—Å—Ç—å, –Ω–æ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
        raise TelegramError("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è")
    
    async def send_video(self, chat_id, video, caption=None, **kwargs):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∏–¥–µ–æ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ—à–∏–±–æ–∫"""
        progress_message = None
        
        for attempt, delay in enumerate(self.retry_delays):
            try:
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —ç—Ç–æ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª–∞
                if isinstance(video, str) and os.path.exists(video):
                    # –≠—Ç–æ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É - –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ
                    if not os.access(video, os.R_OK):
                        raise FileNotFoundError(f"–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É: {video}")
                    
                    file_size = os.path.getsize(video)
                    if file_size == 0:
                        raise ValueError(f"–§–∞–π–ª –ø—É—Å—Ç: {video}")
                    
                    # –î–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º stream –∑–∞–≥—Ä—É–∑–∫—É —á–µ—Ä–µ–∑ Pyrogram
                    if file_size > 10 * 1024 * 1024 and self.pyrogram_app:  # > 10 MB
                        try:
                            return await self._send_large_video(chat_id, video, caption, **kwargs)
                        except Exception as e:
                            logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —á–µ—Ä–µ–∑ Pyrogram: {e}, –ø—Ä–æ–±—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ—Ç–æ–¥")
                    
                    # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ aiogram
                    async with aiofiles.open(video, 'rb') as f:
                        return await self.bot.send_video(
                            chat_id=chat_id, 
                            video=InputFile(await f.read()),
                            caption=caption, 
                            **kwargs
                        )
                else:
                    # –≠—Ç–æ —É–∂–µ –≥–æ—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
                    return await self.bot.send_video(chat_id, video, caption=caption, **kwargs)
                    
            except TelegramRetryAfter as e:
                retry_after = max(e.retry_after, delay)
                logger.warning(f"–§–ª—É–¥-–∫–æ–Ω—Ç—Ä–æ–ª—å –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ: –æ–∂–∏–¥–∞–Ω–∏–µ {retry_after} —Å–µ–∫")
                await asyncio.sleep(retry_after)
            except Exception as e:
                logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ: {e} - –æ–∂–∏–¥–∞–Ω–∏–µ {delay} —Å–µ–∫ (–ø–æ–ø—ã—Ç–∫–∞ {attempt+1}/{len(self.retry_delays)})")
                await asyncio.sleep(delay)
                
                # –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞, –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
                if attempt == len(self.retry_delays) - 1:
                    raise
        
        # –ï—Å–ª–∏ –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã
        raise TelegramError("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ")
    
    async def _send_large_video(self, chat_id, video_path, caption=None, **kwargs):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –±–æ–ª—å—à–æ–≥–æ –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ Pyrogram —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º"""
        if not self.pyrogram_app or not self.pyrogram_app.is_connected:
            raise ValueError("Pyrogram –∫–ª–∏–µ–Ω—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω")
        
        # –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
        progress_message = await self.send_message(chat_id, "üì§ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≤–∏–¥–µ–æ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ...")
        
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º Pyrogram –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
            return await self.pyrogram_app.send_video(
                chat_id=chat_id,
                video=video_path,
                caption=caption,
                progress=self._upload_progress_callback,
                progress_args=(progress_message,)
            )
        finally:
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
            try:
                await self.bot.delete_message(chat_id, progress_message.message_id)
            except:
                pass
    
    async def _upload_progress_callback(self, current, total, message):
        """Callback –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏"""
        try:
            if total:
                progress = (current / total) * 100
                # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫–∞–∂–¥—ã–µ 5%
                if int(progress) % 5 == 0:
                    await self.bot.edit_message_text(
                        f"üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ: {progress:.1f}%\n"
                        f"({current/(1024*1024):.1f}/{total/(1024*1024):.1f} MB)",
                        chat_id=message.chat.id,
                        message_id=message.message_id
                    )
        except Exception as e:
            logger.debug(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: {e}")